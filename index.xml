<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ken-aio&#39;s blog</title>
    <link>https://ken-aio.github.io/</link>
    <description>Recent content on ken-aio&#39;s blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>@ken-aio</copyright>
    <lastBuildDate>Tue, 28 May 2019 23:00:00 +0900</lastBuildDate>
    
	<atom:link href="https://ken-aio.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>[Golang]mapのkeyのちょっとした話</title>
      <link>https://ken-aio.github.io/post/2019/05/28/go-map-tips/</link>
      <pubDate>Tue, 28 May 2019 23:00:00 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2019/05/28/go-map-tips/</guid>
      <description>Tweet はじめに Golangのmapのkeyは同一だと評価される場合、同一のkeyとしてみなされます。 このmapのkeyがどういった場合に同じとみ</description>
    </item>
    
    <item>
      <title>GolangのORM SQLBoilerを使ってみる - 実装編(Select)</title>
      <link>https://ken-aio.github.io/post/2019/04/01/golang-sqlboiler-select/</link>
      <pubDate>Mon, 01 Apr 2019 23:50:00 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2019/04/01/golang-sqlboiler-select/</guid>
      <description>Tweet はじめに GolangのORM SQLBoilerを使ってみる - セットアップ編 GolangのORM SQLBoilerを使ってみる - 実装編(Cr</description>
    </item>
    
    <item>
      <title>GolangのORM SQLBoilerを使ってみる - 実装編(Create/Update/Delete)</title>
      <link>https://ken-aio.github.io/post/2019/03/25/golang-sqlboiler-cud/</link>
      <pubDate>Mon, 25 Mar 2019 23:00:00 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2019/03/25/golang-sqlboiler-cud/</guid>
      <description>Tweet はじめに GolangのORM SQLBoilerを使ってみる - セットアップ編 でセットアップ完了したので、実際にSQLBoilerを使って実装</description>
    </item>
    
    <item>
      <title>GolangのORM SQLBoilerを使ってみる - セットアップ編</title>
      <link>https://ken-aio.github.io/post/2019/02/13/golang-sqlboiler/</link>
      <pubDate>Wed, 13 Feb 2019 23:00:00 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2019/02/13/golang-sqlboiler/</guid>
      <description>Tweet はじめに GolangのORMである SQLBoiler を紹介します。 今回はSQLBoilerをセットアップするところまでやってみます。 SQLBoilerとは</description>
    </item>
    
    <item>
      <title>[Golang]Restyで手軽にAPIリクエストを送る</title>
      <link>https://ken-aio.github.io/post/2019/02/07/golang-resty/</link>
      <pubDate>Thu, 07 Feb 2019 23:00:00 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2019/02/07/golang-resty/</guid>
      <description>Tweet はじめに 今はマイクロサービスアーキテクチャでシステムを作るのが定石になってきている時代です。 最近はJSONのAPIだけではなく、Graph</description>
    </item>
    
    <item>
      <title>[Golang]EchoのMiddlewareを実装する</title>
      <link>https://ken-aio.github.io/post/2019/02/06/golang-echo-middleware/</link>
      <pubDate>Wed, 06 Feb 2019 00:00:00 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2019/02/06/golang-echo-middleware/</guid>
      <description>Tweet はじめに golangのWeb FWのechoを使って独自のmiddle wareを作る方法について書きます。 echoが用意してるmiddlew</description>
    </item>
    
    <item>
      <title>[Golang]Echoで簡単にSwaggerを利用する</title>
      <link>https://ken-aio.github.io/post/2019/02/05/golang-echo-swagger/</link>
      <pubDate>Tue, 05 Feb 2019 00:00:00 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2019/02/05/golang-echo-swagger/</guid>
      <description>Tweet はじめに golangとechoを使ってJSON APIのswaggerを生成する方法について書きます。 swag というツールが提供されているので、基</description>
    </item>
    
    <item>
      <title>GolangとEchoでお手軽にAPIサーバを立てる</title>
      <link>https://ken-aio.github.io/post/2019/01/30/golang-echo/</link>
      <pubDate>Thu, 31 Jan 2019 00:20:00 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2019/01/30/golang-echo/</guid>
      <description>Tweet はじめに golangとechoを使って簡単にAPIサーバを作る方法をまとめます。 動機 golangでAPIサーバを作りたい場合、どんな選択を</description>
    </item>
    
    <item>
      <title>Cassandraにマルチスレッドでバッチ形式にCQLを実行するコマンドexecqlを作った</title>
      <link>https://ken-aio.github.io/post/2019/01/27/cassandra-execql/</link>
      <pubDate>Tue, 29 Jan 2019 22:00:00 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2019/01/27/cassandra-execql/</guid>
      <description>Tweet はじめに Cassandraを使っていて一括で大量にデータをinsertしたいケースがありました。 Cassandra標準のcqlshを使うと</description>
    </item>
    
    <item>
      <title>[Golang]cobraを使って本格的なCLIを作る</title>
      <link>https://ken-aio.github.io/post/2019/01/27/golang-cobra/</link>
      <pubDate>Sun, 27 Jan 2019 22:00:00 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2019/01/27/golang-cobra/</guid>
      <description>Tweet はじめに GolangでCLIツールを作りたくて、ググった結果、cobraを使うことに決めました。 使ってみた結果、非常によかったです。 本格的</description>
    </item>
    
    <item>
      <title>GolangでEnumを作る</title>
      <link>https://ken-aio.github.io/post/2019/01/21/golang-enum/</link>
      <pubDate>Mon, 21 Jan 2019 23:29:51 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2019/01/21/golang-enum/</guid>
      <description>Tweet はじめに GolangでJavaのEnumっぽい機能が欲しいなと思って調べた結果を残しておきます。 今回やりたかったことは Enum自体はGol</description>
    </item>
    
    <item>
      <title>CircleCIでHugoのブログを自動公開する</title>
      <link>https://ken-aio.github.io/post/2019/01/16/hugo-circleci/</link>
      <pubDate>Wed, 16 Jan 2019 16:44:14 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2019/01/16/hugo-circleci/</guid>
      <description>Tweet はじめに こちら の記事でhugoを使ってこのブログを開設した記事を書きました。 今回はその続きで、記事を書いたらCircleCIで自動ビルドを</description>
    </item>
    
    <item>
      <title>Hugo &#43; Even でGithubブログを作りました</title>
      <link>https://ken-aio.github.io/post/2019/01/15/hugo-even/</link>
      <pubDate>Tue, 15 Jan 2019 16:40:05 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2019/01/15/hugo-even/</guid>
      <description>Tweet はじめに 心機一転、ブログを始めるにあたって使ったのが github pages hugo でした。 理由としては簡単で、ブログの運用をやりたくないので、楽な方法を探してて見</description>
    </item>
    
    <item>
      <title>Hello World</title>
      <link>https://ken-aio.github.io/post/2019/01/15/helloworld/</link>
      <pubDate>Tue, 15 Jan 2019 13:58:38 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2019/01/15/helloworld/</guid>
      <description>Tweet こんにちは。@ken-aioです。 以前、ブログをやっていたのですが、心機一転もう一度ブログをはじめました。 記事をもともとやっていたブログか</description>
    </item>
    
    <item>
      <title>Solrと検索のまとめ - 評価編</title>
      <link>https://ken-aio.github.io/post/2017/08/18/solr-search-evaluation/</link>
      <pubDate>Fri, 18 Aug 2017 19:30:00 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2017/08/18/solr-search-evaluation/</guid>
      <description>Tweet はじめに こちらの記事 の続編で検索における評価の方法についてまとめます。 同じく以下の書籍を参考資料にしています。 検索の評価 Solrの検索精度</description>
    </item>
    
    <item>
      <title>Solrと検索のまとめ - 検索編</title>
      <link>https://ken-aio.github.io/post/2017/08/18/solr-search-base/</link>
      <pubDate>Fri, 18 Aug 2017 16:30:00 +0900</pubDate>
      
      <guid>https://ken-aio.github.io/post/2017/08/18/solr-search-base/</guid>
      <description>Tweet はじめに 書籍を読んだので、自分なりにSolrを使った検索についてまとめます。 なお、この記事については以下の書籍を参考に書いています。 詳細に</description>
    </item>
    
  </channel>
</rss>